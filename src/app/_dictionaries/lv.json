{
  "getStarted": "Sāc, pārsaucot",
  "envExample": ".env.example",
  "envLocal": ".env.local",
  "setVars": "un iestati pareizās vērtības mainīgajiem.",
  "save": "Saglabā un uzreiz redzi izmaiņas.",
  "deploy": "Izvietot tagad",
  "readDocs": "Lasīt dokumentāciju",
  "abillioServices": "Abillio pakalpojumi",
  "switchLang": "Pārslēgt uz",
  "clientSideFetch": "Klienta pusē",
  "clientSideFetchDesc": "(ajax -> proxy -> abillio)",
  "serverSideFetch": "Servera pusē",
  "serverSideFetchDesc": "(proxy -> abillio)",
  "directAbillioFetch": "Servera pusē",
  "directAbillioFetchDesc": "(pa tiešo uz abillio)",
  "directAbillioInfo": "Šis komponents izmanto <b>abillioApiRequest</b>, lai veiktu pieprasījumu tieši uz Abillio API servera pusē.<br /><b>Priekšrocība:</b> nav starpnieka, ātrāks, bet jāuzmanās ar sensitīviem datiem un rate limiting.<br />",
  "serverFetchInfo": "Šis komponents veic <b>fetch uz /api/abillio/services</b> servera pusē, izmantojot <b>await</b>.<br /><b>Priekšrocība:</b> vari izmantot Next.js API autentifikāciju, rate limiting, logging u.c.<br />",
  "requestExampleServer": "Pieprasījuma piemērs servera pusē:",
  "requestExampleClient": "Pieprasījuma piemērs React komponentā:",
  "clientInfo": "Šis komponents veic <b>fetch uz /api/abillio/services</b> <b>no klienta puses</b> (ar <code>useEffect</code> un <code>useState</code>).<br /><b>Priekšrocība:</b> noderīgs, ja vajag dinamisku, interaktīvu UI vai live datus.<br />",
  "showingResults": "Rāda {count} no {total} rezultātiem",
  "loading": "Ielādē...",
  "noServices": "Nav pakalpojumu",
  "errorLoadingData": "Kļūda ielādējot datus: {error}",
  "serverComponent": "Servera komponents",
  "serverComponentAlert": "Šis ir servera komponents (nav 'use client'), tāpēc to var izmantot tikai servera lapās vai wrapper komponentos.",
  "directAbillioCaveats": "<b>Trūkumi:</b> Lapa ielādējas tikai tad, kad dati ir saņemti no Abillio API, tāpēc lietotājs var redzēt tukšu ekrānu, kamēr dati tiek ielādēti. Nav klienta puses loading stāvokļa vai skeleton ekrāna – viss notiek serverī. Nav piemērots ļoti dinamiskam vai interaktīvam UI.",
  "serverFetchCaveats": "<b>Trūkumi:</b> Lapa ielādējas tikai tad, kad dati ir saņemti no Next.js API, tāpēc lietotājs var redzēt tukšu ekrānu, kamēr dati tiek ielādēti. Nav klienta puses loading stāvokļa vai skeleton ekrāna – viss notiek serverī. Nav piemērots ļoti dinamiskam vai interaktīvam UI.",
  "clientCaveats": "<b>Trūkumi:</b> Dati tiek ielādēti pēc lapas attēlošanas, tāpēc lietotājs sākumā redz loading stāvokli vai tukšu saturu. Vairāk tīkla pieprasījumu no pārlūka. Nav piemērots sensitīviem datiem vai ja svarīgs SEO."
}
